!configdict
badpix: median

beammap: !bmap
  default: MEC
#  file: /some/bath/to/beammap.bmap
#  freqfiles: /some/path/to/ps_freqs_FL*_clip.txt
#  nrows: 146
#  ncols: 140

paths: !configdict
    dithers: /darkdata/MEC/logs/
    data: /darkdata/ScienceData/Subaru/
    #a processing cache directory, calibrations, configs, etc will be retrieved/stored here
    database: /work/temp/database/
    out: /work/temp/out/
    tmp: /work/temp/scratch/  #(optional) can be used to specify a location for data intensive temp files

ncpu: 7
include_baseline: False # whether to include the baseline in h5 creation

linearity: !configdict
  dt: 500000 #time window around which to calculate the linearity weight (microsesonds)

wavecal: !configdict
  plots: summary
  fit: !configdict
    # model types from wavecal_models.py to attempt to fit to the phase peak histograms
    # (list of strings)
    histogram_model_names: ['GaussianAndExponential']
    # minimum bin width for the phase histogram. Larger widths will be used for low photon
    # count pixels (number)
    bin_width: 2
    # how many times should the code try to fit each histogram model before giving up
    histogram_fit_attempts: 3
    # model types from wavecal_models.py to attempt to fit to the phase-energy relationship
    # (list of strings)
    calibration_model_names: ['Quadratic', 'Linear']
    # ignore photons which arrive this many microseconds from another photon (number)
    dt: 500
    # do the fitting using more than one core (True/False)
    parallel: True
    parallel_prefetch: False

spectralcal: !configdict
  #Mandatory
  photometry_type: aperture  # aperture | psf
  summary_plot: True
  #optional
  interpolation: linear  # linear | cubic | nearest

flatcal: !configdict
  method: 'Laser' #either 'White' for a white for a white light calibration or 'Laser' for a laser calibration
  #This section provides the parameters specific to the flat calibration function
  rate_cutoff: 20000 #Count Rate Cutoff in inverse seconds (number)
  trim_fraction: 1  #number of Chunks to trim (integer)
  use_wavecal: True
  #Integration time to break up larger h5 files into in seconds (number) (5 sec recommended)
  #Flatcal will calculate weights over chunk_time*nchunks (number of chunks) and median-average them
  chunk_time: 10
  nchunks: 6
  dark_data:
    start_times: 1576498833
    int_times: 30
  #power of the polynomial to fit - recommended to not go above 2
  power: 1
  plots: summary  # None|summary|all  (all will add ~30 min to the process!)


instrument: !configdict
  #This section provides information about the specific wavelength and energy parameters for this instrument
  #deadtime (number)
  deadtime: 0.000001
  #Energy bin width in eV  (number)
  energy_bin_width: 0.01
  #Starting Wavelength in nanometers (number)
  wvl_start: 800
  #Final Wavelength in nanometers (number)
  wvl_stop: 1400
  platescale: 10.4 #mas

drizzler: !configdict
  plots: all
  pixfrac: 0.5
  exp_timestep: 1  # duration of the time bins in the output cube
  wcs_timestep: 1  # time between different wcs parameters (eg orientations). 0 will use the calculated non-blurring min
  nwvlbins: 1  # the number of equal width bins in the temporally drizzled cube
  usecache: False  # if True the reformatted photontable data from each of the dithers is stored and reloaded for
                   # subsequent runs of drizzler.py
  derotate: False  # apply a rotation to each frame opposite to the sky rotation to align the objects
  align_start_pa: False  # if derotate is False then the images can be aligned to the first frame for the purpose of ADI
  whitelight: True  # tell drizzler to turn off derotation and set ra and dec to 0

templar: !configdict
  file: the_conf.yml

verbose: True
